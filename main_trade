//+------------------------------------------------------------------+
//|                                                    SimpleBuy.mq5 |
//|                                  Copyright 2022, MetaQuotes Ltd. |
//|                                             https://www.mql5.com |
//+------------------------------------------------------------------+
#property copyright "Copyright 2022, MetaQuotes Ltd."
#property link      "https://www.mql5.com"
#property version   "1.00"

//#include <CustomFunctions.mqh>
#include <account_position.mqh>


//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
void OnTick()
  {
   
   double ask=SymbolInfoDouble(_Symbol,SYMBOL_ASK);
   double bid=SymbolInfoDouble(_Symbol,SYMBOL_BID);
   
   string trend=isTrend();
   string signal=entrySignal();
   int type=getOrderType();
   
   Comment("Waiting for signal : "+trend + "\n",
           "Signal : "+ signal+ "\n",
           "I'm in a position of : "+type);  
           
           
   
   if(signal=="CrossDown" && PositionsTotal()==0) 
   trade.Sell(0.10,_Symbol,bid,bid+100* _Point,bid-400* _Point,Red);

   
   if(signal=="MorningStar_Sell" && PositionsTotal()==0)
   trade.Sell(0.10,_Symbol,bid,bid+100* _Point,bid-400* _Point,Red);
   
   if(signal=="Doji_Sell" && PositionsTotal()==0)
   trade.Sell(0.10,_Symbol,bid,bid+100* _Point,bid-400* _Point,Red);

   
   if(signal=="Hammer_Buy" && PositionsTotal()==0) 
   orderBuy();

   
   if(signal=="BearishEngulfing_Close" && PositionsTotal()==1)
   trade.PositionClose(PositionGetTicket(0)); 
   
   if(signal=="BearishEngulfing_Sell" && PositionsTotal()==0) 
   trade.Sell(0.10,_Symbol,bid,bid+100* _Point,bid-400* _Point,Red);
   
   if(signal=="BullishEngulfing_Close" && getOrderType()==1)
   trade.PositionClose(PositionGetTicket(0));
   
   if(signal=="BullishEngulfing_Buy" && PositionsTotal()==0) 
   orderBuy();
   
   if(signal=="CrossUp" && PositionsTotal()==0) 
   orderBuy();

   if(signal=="MorningStar_Close" && getOrderType()==0)
   trade.PositionClose(PositionGetTicket(0));
   
   if(signal=="Close" && getOrderType()==1)
   trade.PositionClose(PositionGetTicket(0));
   
   if(signal=="TurnDown" && getOrderType()==0)
   trade.PositionClose(PositionGetTicket(0));
   
   if(signal=="TurnUp" && getOrderType()==1)
   trade.PositionClose(PositionGetTicket(0));
   
   if(signal=="HammerClose" && getOrderType()==1)
   trade.PositionClose(PositionGetTicket(0));
   
   if(signal=="Close" && getOrderType()==0)
   trade.PositionClose(PositionGetTicket(0));
   
   if(signal=="Doji_Above_Close" && getOrderType()==0)
   trade.PositionClose(PositionGetTicket(0));
   
   if(signal=="Doji_Under_Close" && getOrderType()==1)
   trade.PositionClose(PositionGetTicket(0));
   
   //if(signal=="CrossDownClose" && getOrderType()==0)
   //trade.PositionClose(PositionGetTicket(0));
   
   //if(signal=="CrossUpClose" && getOrderType()==1)
   //trade.PositionClose(PositionGetTicket(0));

  }
//+------------------------------------------------------------------+

string orderBuy()
{
   bool buy=false;
   double ask=SymbolInfoDouble(_Symbol,SYMBOL_ASK);
   if(buy==false)
   {
      buy=trade.Buy(0.10,_Symbol,ask,ask-100* _Point,ask+500* _Point,Green);
      buy=true;
   }
   return buy;
}
